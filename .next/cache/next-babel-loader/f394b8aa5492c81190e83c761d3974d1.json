{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/horiguchi-seni.com/pages/_app.tsx\";\nimport React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App, { Container } from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport '../src/styles/common.scss';\nimport reducers from '../src/reducers';\n\nconst makeStore = () => {\n  return createStore(reducers, applyMiddleware(thunk));\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    ctx.store.dispatch({\n      type: 'FOO',\n      payload: 'foo'\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/horiguchi-seni.com/pages/_app.tsx"],"names":["React","createStore","applyMiddleware","Provider","thunk","App","Container","withRedux","reducers","makeStore","MyApp","getInitialProps","Component","ctx","store","dispatch","type","payload","pageProps","render","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,2BAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAOR,WAAW,CAACO,QAAD,EAAWN,eAAe,CAACE,KAAD,CAA1B,CAAlB;AACD,CAFD;;AAUA,MAAMM,KAAN,SAAoBL,GAApB,CAAkC;AAChC,eAAaM,eAAb,CAA6B;AAC3BC,IAAAA,SAD2B;AAE3BC,IAAAA;AAF2B,GAA7B,EAMG;AACDA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAnB;AACA,UAAMC,SAAS,GAAGN,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAGA,WAAO;AAAEK,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaM,MAAAA,SAAb;AAAwBJ,MAAAA;AAAxB,QAAkC,KAAKM,KAA7C;AACA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAxB+B;;AA2BlC,eAAeX,SAAS,CAACE,SAAD,CAAT,CAAqBC,KAArB,CAAf","sourcesContent":["import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App, { Container } from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport '../src/styles/common.scss';\nimport reducers from '../src/reducers';\n\nconst makeStore = () => {\n  return createStore(reducers, applyMiddleware(thunk));\n};\n\ninterface AppProps {\n  Component: React.Component;\n  pageProps: any;\n  store: any;\n}\n\nclass MyApp extends App<AppProps> {\n  static async getInitialProps({\n    Component,\n    ctx\n  }: {\n    Component: any;\n    ctx: any;\n  }) {\n    ctx.store.dispatch({ type: 'FOO', payload: 'foo' });\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Container>\n        <Provider store={store}>\n          <Component {...pageProps} />\n        </Provider>\n      </Container>\n    );\n  }\n}\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}