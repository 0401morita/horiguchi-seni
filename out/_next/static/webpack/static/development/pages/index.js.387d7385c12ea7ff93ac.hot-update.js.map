{"version":3,"file":"static/webpack/static/development/pages/index.js.387d7385c12ea7ff93ac.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport '../src/styles/home.scss';\nimport { HeroSection } from '../src/components/homes/slider';\nimport ServiceItem from '../src/components/homes/service_item';\nimport TopNews from '../src/components/shares/top_news';\nimport { ArrowRightIcon } from '../src/components/icons';\nimport { State } from '../src/reducers';\nimport EventListener from 'react-event-listener';\n\ninterface HomeProps {}\n\nconst Home: React.FC<HomeProps & State> = props => {\n  const [Services] = useState([\n    {\n      image_src:\n        'https://0401morita.github.io/horiguchi-seni/static/images/service/machine-quilting.jpg',\n      title: '縫製・販売',\n      summary: '生地・デザインの選定からユニフォームを縫製・販売',\n      label_en: 'Sewing & Sales',\n      label_ja: '縫製・販売について',\n      link: '/service/sewing'\n    },\n    {\n      image_src:\n        'https://0401morita.github.io/horiguchi-seni/static/images/service/name.jpg',\n      title: 'ユニフォーム販売',\n      summary: '各種メーカー品を特別価格にて販売',\n      label_en: 'Sale',\n      label_ja: '販売について',\n      link: '/service/sale'\n    },\n    {\n      image_src:\n        'https://0401morita.github.io/horiguchi-seni/static/images/service/iron.jpg',\n      title: 'リネンサプライ',\n      summary: 'ユニフォームのリースやクリーニング付リース',\n      label_en: 'Linen supply',\n      label_ja: 'リネンサプライについて',\n      link: '/service/linen-supply'\n    }\n  ]);\n\n  const [windowState, setWindowState] = useState({\n    width: 0,\n    height: 0,\n    vw: 0,\n    vh: 0\n  });\n\n  const primaryMessageEl = useRef<HTMLDivElement>(null);\n  /*\n   * リサイズ実行関数\n   *\n   * @event {Object} event - イベント\n   */\n  const handleResize = (e: any) => {\n    let timer = 200;\n    if (timer > 0) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(function() {\n      setWindowState(prevState => {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        return {\n          ...prevState,\n          width: width,\n          height: height,\n          vw: Math.floor(width * 0.01),\n          vh: Math.floor(height * 0.01)\n        };\n      });\n    }, timer);\n  };\n  /*\n   * スクロール実行関数\n   *\n   * @event {Object} event - イベント\n   */\n  const handleScroll = () => {\n    const scrollTop = Math.max(\n      window.pageYOffset,\n      document.documentElement.scrollTop,\n      document.body.scrollTop\n    );\n\n    if (primaryMessageEl.current) {\n      console.log(windowState);\n\n      const { width: windowWidth, height: windowHeight, vw, vh } = windowState;\n      const isSmartPhone = windowWidth >= 768;\n      console.log('isSmartPhone', isSmartPhone);\n      if (isSmartPhone) {\n      } else {\n        console.log(scrollTop, windowHeight * 0.12, vh * 12 + 132);\n        if (scrollTop > vh * 12) {\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log('did');\n\n    setWindowState(prevState => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      return {\n        ...prevState,\n        width: width,\n        height: height,\n        vw: Math.floor(width * 0.01),\n        vh: Math.floor(height * 0.01)\n      };\n    });\n\n    if (primaryMessageEl.current) {\n      console.log(windowState);\n    }\n\n    document.body.classList.add('in');\n\n    window.addEventListener('load', handleScroll, false);\n    window.addEventListener('scroll', handleScroll, false);\n    window.addEventListener('touchmove', handleScroll, false);\n    return () => {\n      window.removeEventListener('load', handleScroll, false);\n      window.removeEventListener('scroll', handleScroll, false);\n      window.removeEventListener('touchmove', handleScroll, false);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <EventListener target=\"window\" onResize={handleResize} />\n\n      <HeroSection />\n      <main className=\"mainContainer\">\n        <div className=\"mainContainer__index\">Company - 会社概要</div>\n        <div className=\"content mainContainer__content\">\n          <section className=\"homeMessage\">\n            <div className=\"homeMessage__primary\">\n              <div className=\"primaryMessage\" ref={primaryMessageEl}>\n                <h2 className=\"primaryMessage__title\">\n                  <span>ENJOY</span>\n                  <br />\n                  <span>UNIFORM</span>\n                </h2>\n                <p className=\"primaryMessage__description\">\n                  <span>ユニフォームを着る人をもっと快適に。</span>\n                  <br />\n                  <span>もっと楽しく。</span>\n                </p>\n              </div>\n            </div>\n            <div className=\"homeMessage__secondary\">\n              <div className=\"secondaryMessage\">\n                <p>堀口繊維工業は、戦後まもなく縫製事業を立ち上げました。</p>\n                <p>\n                  ユニフォームを縫製・販売する一方で平成に入りクリーニング設備を\n                  整えました。\n                </p>\n                <p>\n                  現在、ユニフォームの縫製・販売・クリーニング・クリーニング付リース（リネンサプライ）を\n                  中心に展開いたしております。\n                </p>\n\n                <a className=\"read-more-link\">\n                  <span className=\"en\">About</span>\n                  <span className=\"ja\">堀口繊維工業について</span>\n                </a>\n              </div>\n            </div>\n          </section>\n\n          <div className=\"contentInnerHeader\">\n            <h3 className=\"contentInnerHeader__title\">\n              <span className=\"ja\">私たちの事業</span>\n              <span className=\"en\">Service</span>\n            </h3>\n          </div>\n\n          <div className=\"service-list\">\n            {Services.map((service, index) => {\n              return (\n                <ServiceItem\n                  {...{ ...service, index: '0' + (index + 1) }}\n                  key={index}\n                />\n              );\n            })}\n          </div>\n\n          <div className=\"contentFooter\">\n            <Link href=\"/contact\">\n              <a className=\"btn btn-black contentFooter__button\">\n                お問い合わせ\n                <ArrowRightIcon />\n              </a>\n            </Link>\n          </div>\n        </div>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default connect(state => state)(Home);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAPA;AApBA;AAAA;AACA;AADA;AAgCA;AACA;AACA;AACA;AAJA;AA/BA;AAAA;AAAA;AACA;AAqCA;AACA;;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AADA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}